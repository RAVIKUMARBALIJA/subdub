version: '2.3'
services:
  redis-server:
    image: redis:latest
    ports:
      - 6379:6379
  translator:
    image: translator
    build: 
      context: ./translator
      dockerfile: docker_files/Dockerfile.server
    environment: 
      - REDIS_HOST=redis-server
      - SRC_MOUNT_VOLUME=${SRC_MOUNT_VOLUME}
      - DEST_MOUNT_VOLUME=${DEST_MOUNT_VOLUME}
    entrypoint: /app/scripts/start_server.sh
    ports: 
      - "6000:6000"
    depends_on:
      - redis-server
    tty: true
    volumes: 
      - ${SRC_MOUNT_VOLUME}:${DEST_MOUNT_VOLUME}
  web_app:
    image: web_app 
    build: 
      context: ./web_ui
      dockerfile: Dockerfile
    environment: 
      - SRC_MOUNT_VOLUME=${SRC_MOUNT_VOLUME}
      - DEST_MOUNT_VOLUME=${DEST_MOUNT_VOLUME}
      - TRANSLATER=translator
    ports: 
      - "5000:5000"
    tty: true
    volumes: 
      - ${SRC_MOUNT_VOLUME}:${DEST_MOUNT_VOLUME}
  # audiototext:
  #   image: auditotext_converter
  #   build: 
  #     context: ./audiototext
  #     dockerfile: docker_files/Dockerfile.server
  #   environment: 
  #     - REDIS_HOST=redis-server
  #     - SRC_MOUNT_VOLUME=${SRC_MOUNT_VOLUME}
  #     - DEST_MOUNT_VOLUME=${DEST_MOUNT_VOLUME}
  #   entrypoint: /app/scripts/start_server.sh
  #   tty: true
  #   depends_on:
  #     - redis-server
  #   volumes: 
  #     - ${SRC_MOUNT_VOLUME}:${DEST_MOUNT_VOLUME}
  
  # texttoaudio:
  #   image: texttoaudio_converter
  #   build: 
  #     context: ./texttoaudio
  #     dockerfile: docker_files/Dockerfile.server
  #   environment: 
  #     - REDIS_HOST=redis-server
  #     - SRC_MOUNT_VOLUME=${SRC_MOUNT_VOLUME}
  #     - DEST_MOUNT_VOLUME=${DEST_MOUNT_VOLUME}
  #   entrypoint: /app/scripts/start_server.sh
  #   tty: true
  #   depends_on:
  #     - redis-server
  #   volumes: 
  #     - ${SRC_MOUNT_VOLUME}:${DEST_MOUNT_VOLUME}
  
  # textoaudio_worker:
  #   image: textoaudio_worker
  #   build: 
  #     context: ./texttoaudio
  #     dockerfile: docker_files/Dockerfile.worker
  #   environment: 
  #     - REDIS_HOST=redis-server
  #     - EXEC_MODE=worker
  #     - MAPPED_VOLUME=${DEST_MOUNT_VOLUME}
  #   entrypoint: /app/scripts/start_worker.sh
  #   tty: true
  #   depends_on:
  #     - redis-server
  #   volumes: 
  #     - ${SRC_MOUNT_VOLUME}:${DEST_MOUNT_VOLUME}
  
  # audiototext_worker:
  #   image: audiototext_worker
  #   build: 
  #     context: ./audiototext
  #     dockerfile: docker_files/Dockerfile.worker
  #   environment: 
  #     - REDIS_HOST=redis-server
  #     - EXEC_MODE=worker
  #     - MAPPED_VOLUME=${DEST_MOUNT_VOLUME}
  #   entrypoint: /app/scripts/start__worker.sh
  #   tty: true
  #   depends_on:
  #     - redis-server
  #   volumes: 
  #     - ${SRC_MOUNT_VOLUME}:${DEST_MOUNT_VOLUME}
